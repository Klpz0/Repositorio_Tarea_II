{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Introducci\u00f3n: Cuadratura Gaussiana","text":"<p>La cuadratura gaussiana es un m\u00e9todo num\u00e9rico que nos sirve para calcular integrales definidas forma precisa y eficiente, este m\u00e9todo es especialmente \u00fatil cuando no se tiene un resultado anal\u00edtico para una integral. Se basa en polinomios ortogonales, como los de Legendre, para integrar de manera exacta funciones polin\u00f3micas de hasta $ 2N - 1$, lo que nos da un resultado muy preciso de forma eficiente pues usa menos evaluaciones de la funci\u00f3n.</p> <p>En esta p\u00e1gina se presenta la documentaci\u00f3n de la implementaci\u00f3n del m\u00e9todo para la resoluci\u00f3n de la siguiente integral:</p> \\begin{equation} I = \\int_0^{\\pi} \\sin(x^2) \\, dx \\end{equation} <p>Esta integral no tiene soluci\u00f3n anal\u00edtica, por lo que se recurre a m\u00e9todos num\u00e9ricos. Se utiliza <code>numpy</code> y <code>matplotlib</code> para realizar el c\u00e1lculo y la visualizaci\u00f3n.</p>"},{"location":"codigo/","title":"C\u00f3digo Fuente","text":"<pre><code>import numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef gaussxw(N):\n    \"\"\"\n    Calcula los nodos y pesos para la cuadratura de Gauss-Legendre.\n\n    Args:\n        N (int): N\u00famero de nodos.\n\n    Returns:\n        tuple: Nodos (x) y pesos (w) en el intervalo [-1, 1].\n    \"\"\"\n    x, w = np.polynomial.legendre.leggauss(N)\n    return x, w\n\n\ndef gaussxwab(a, b, x, w):\n    \"\"\"\n    Escala nodos y pesos del intervalo [-1, 1] al intervalo [a, b].\n\n    Args:\n        a (float): L\u00edmite inferior del intervalo.\n        b (float): L\u00edmite superior del intervalo.\n        x (ndarray): Nodos en [-1, 1].\n        w (ndarray): Pesos en [-1, 1].\n\n    Returns:\n        tuple: Nodos y pesos escalados al intervalo [a, b].\n    \"\"\"\n    xp = 0.5 * (b - a) * x + 0.5 * (b + a)\n    wp = 0.5 * (b - a) * w\n    return xp, wp\n\n\ndef integrando(x):\n    \"\"\"\n    Funci\u00f3n a integrar: sin(x^2).\n\n    Args:\n        x (float or ndarray): Punto(s) donde se eval\u00faa.\n\n    Returns:\n        float or ndarray: Valor(es) de sin(x^2).\n    \"\"\"\n    return np.sin(x**2)\n\n\ndef main():\n    \"\"\"\n    Ejecuta la integraci\u00f3n para varios valores de N y genera un gr\u00e1fico\n    del valor de la integral en funci\u00f3n de N.\n    \"\"\"\n    a, b = 0, np.pi\n    N_vals = range(2, 31)\n    integrales = []\n\n    for N in N_vals:\n        x, w = gaussxw(N)\n        xp, wp = gaussxwab(a, b, x, w)\n        integral = np.sum(wp * integrando(xp))\n        integrales.append(integral)\n\n    # Mostrar gr\u00e1fico\n    plt.figure(dpi=100)\n    plt.plot(N_vals, integrales, marker='o')\n    plt.axhline(1.77245, color='red', linestyle='--', label=\"Referencia ~1.77245\")\n    plt.xlabel(\"N (n\u00famero de nodos)\")\n    plt.ylabel(\"Valor de la integral\")\n    plt.title(\"Integral de sin(x\u00b2) con cuadratura de Gauss-Legendre\")\n    plt.grid(True)\n    plt.legend()\n    plt.tight_layout()\n    plt.show()\n\n\nmain()\n</code></pre>"},{"location":"ducu_codigo/","title":"Documentaci\u00f3n del C\u00f3digo","text":""},{"location":"ducu_codigo/#Cuadratura_Gaussiana.gaussxw","title":"<code>gaussxw(N)</code>","text":"<p>Calcula los nodos y pesos para la cuadratura de Gauss-Legendre.</p> <p>Parameters:</p> Name Type Description Default <code>N</code> <code>int</code> <p>N\u00famero de nodos a usar.</p> required <p>Returns:</p> Type Description <code>tuple</code> <p>(x, w) donde <code>x</code> son los puntos de evaluaci\u00f3n y <code>w</code> los pesos.</p> Source code in <code>Cuadratura_Gaussiana.py</code> <pre><code>def gaussxw(N):\n    \"\"\"\n    Calcula los nodos y pesos para la cuadratura de Gauss-Legendre.\n\n    Parameters:\n        N (int): N\u00famero de nodos a usar.\n\n    Returns:\n        (tuple): (x, w) donde `x` son los puntos de evaluaci\u00f3n y `w` los pesos.\n    \"\"\"\n    x, w = np.polynomial.legendre.leggauss(N)\n    return x, w\n</code></pre>"},{"location":"ducu_codigo/#Cuadratura_Gaussiana.gaussxwab","title":"<code>gaussxwab(a, b, x, w)</code>","text":"<p>Escala los nodos y pesos de la cuadratura desde el intervalo [-1, 1] al intervalo [a, b].</p> <p>Parameters:</p> Name Type Description Default <code>a</code> <code>float</code> <p>L\u00edmite inferior del intervalo de integraci\u00f3n.</p> required <code>b</code> <code>float</code> <p>L\u00edmite superior del intervalo de integraci\u00f3n.</p> required <code>x</code> <code>ndarray</code> <p>Nodos en [-1, 1].</p> required <code>w</code> <code>ndarray</code> <p>Pesos en [-1, 1].</p> required <p>Returns:</p> Type Description <code>tuple</code> <p>(xp, wp) nodos y pesos escalados a [a, b].</p> Source code in <code>Cuadratura_Gaussiana.py</code> <pre><code>def gaussxwab(a, b, x, w):\n    \"\"\"\n       Escala los nodos y pesos de la cuadratura desde el intervalo [-1, 1] al intervalo [a, b].\n\n    Parameters:\n        a (float): L\u00edmite inferior del intervalo de integraci\u00f3n.\n        b (float): L\u00edmite superior del intervalo de integraci\u00f3n.\n        x (np.ndarray): Nodos en [-1, 1].\n        w (np.ndarray): Pesos en [-1, 1].\n\n    Returns:\n        (tuple): (xp, wp) nodos y pesos escalados a [a, b].\n        \"\"\"\n    xp = 0.5 * (b - a) * x + 0.5 * (b + a)\n    wp = 0.5 * (b - a) * w\n    return xp, wp\n</code></pre>"},{"location":"ducu_codigo/#Cuadratura_Gaussiana.integrando","title":"<code>integrando(x)</code>","text":"<pre><code>Funci\u00f3n a integrar: sin(x\u00b2).\n</code></pre> <p>Parameters:</p> Name Type Description Default <code>x</code> <code>ndarray</code> <p>Puntos donde evaluar la funci\u00f3n.</p> required <p>Returns:</p> Type Description <code>ndarray</code> <p>Resultado de evaluar sin(x\u00b2).</p> Source code in <code>Cuadratura_Gaussiana.py</code> <pre><code>def integrando(x):\n    \"\"\"\n        Funci\u00f3n a integrar: sin(x\u00b2).\n\n    Parameters:\n        x (np.ndarray): Puntos donde evaluar la funci\u00f3n.\n\n    Returns:\n        (np.ndarray): Resultado de evaluar sin(x\u00b2).\n        \"\"\"\n    return np.sin(x**2)\n</code></pre>"},{"location":"ducu_codigo/#Cuadratura_Gaussiana.main","title":"<code>main()</code>","text":"<p>Ejecuta la integraci\u00f3n para varios valores de N y genera un gr\u00e1fico del valor de la integral en funci\u00f3n de N.</p> Source code in <code>Cuadratura_Gaussiana.py</code> <pre><code>def main():\n    \"\"\"\n    Ejecuta la integraci\u00f3n para varios valores de N y genera un gr\u00e1fico\n    del valor de la integral en funci\u00f3n de N.\n    \"\"\"\n    a, b = 0, np.pi\n    N_vals = range(2, 31)\n    integrales = []\n\n    for N in N_vals:\n        x, w = gaussxw(N)\n        xp, wp = gaussxwab(a, b, x, w)\n        integral = np.sum(wp * integrando(xp))\n        integrales.append(integral)\n\n    # Mostrar gr\u00e1fico\n    plt.figure(dpi=100)\n    plt.plot(N_vals, integrales, marker='o')\n    plt.axhline(1.77245, color='red', linestyle='--', label=\"Referencia ~1.77245\")\n    plt.xlabel(\"N (n\u00famero de nodos)\")\n    plt.ylabel(\"Valor de la integral\")\n    plt.title(\"Integral de sin(x\u00b2) con cuadratura de Gauss-Legendre\")\n    plt.grid(True)\n    plt.legend()\n    plt.tight_layout()\n    plt.show()\n</code></pre>"},{"location":"explicacion/","title":"M\u00e9todo Num\u00e9rico: Cuadratura de Gauss-Legendre","text":"<p>La cuadratura de Gauss-Legendre permite calcular integrales de la forma:</p> \\begin{equation} \\int_{a}^{b} f(x) dx \\approx \\sum_{i=1}^{N} w_i f(x_i) \\end{equation} <p>Donde:</p> <ul> <li>\\( x_i \\): nodos (ra\u00edces del polinomio de Legendre)</li> <li>\\( w_i \\): pesos asociados</li> </ul> <p>En este caso, la integral se transforma de \\([0, \\pi]\\) al intervalo est\u00e1ndar \\([-1, 1]\\), y luego se aplican las f\u00f3rmulas de cambio de variable para escalar los nodos y pesos.</p> <p>El m\u00e9todo es particularmente eficiente para funciones suaves, aunque presenta desaf\u00edos en funciones oscilatorias como \\( \\sin(x^2) \\).</p>"}]}